package com.tap.DaoImple;

import com.tap.modeal.*;
import com.tap.Dao.MenuDao;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

public class MenuImp implements MenuDao
{
	PreparedStatement pstmt = null;
	Connection connection = null;
	ResultSet rest = null;
	Connection con = null;
	Statement stmt = null;
	private String url = "jdbc:mysql://localhost/foodapp";
	private String username = "root";
	private String password = "@sumit222";

	final static String ADD_MENU = "insert into `menu`( `itemname`,`itemprice`,  `description`, `imagepath`, `isAvailable`, `rating`,`restaurantId`) values(?,?,?,?,?,?,?)";

	final static String SELECT_ONE = "select * from `menu` where `menuid`=?";
	final static String UPDATE = "update `menu` set `itemname`=?, `description`=?, `itemprice`=?, `imagepath`=?, `isAvailable`=?, `rating`=? , `restaurantId`=? where `menuid`=?";
	final static String DELETE = "delete from `menu`where `menuid`=?";
	final static String SELECT_REST_ID = "Select * from `menu` where `restaurantId`=?";
	final static String SELECT_ALL = "SELECT * from `menu`";

	public MenuImp() {
		try {
			Class.forName("com.mysql.cj.jdbc.Driver");
			System.out.println("Driver loaded");

			con = DriverManager.getConnection(url, username, password);
			System.out.println("connection established");

		} catch (Exception e) {

			e.printStackTrace();
		}

	}

	@Override
	public void addMenu(Menu menu) {

		try {
			pstmt = connection.prepareStatement(ADD_MENU);

			pstmt.setInt(1, menu.getRestaurantId());
			pstmt.setString(2, menu.getItemName());
			pstmt.setString(3, menu.getDescription());
			pstmt.setDouble(4, menu.getItemPrice());
			pstmt.setString(5, menu.getImagePath());
			pstmt.setBoolean(6, menu.isAvailable());
			pstmt.setDouble(7, menu.getRating());

			System.out.println(pstmt.executeUpdate());

		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	@Override
	public Menu getMenu(int menuId)
	{
		Menu menu = null;

		try {
			pstmt = connection.prepareStatement(SELECT_ONE);

			pstmt.setInt(1, menuId);

//			ResultSet res = pstmt.executeQuery();
			 rest = pstmt.executeQuery();

			

			if (rest.next()) {
				int restaurantId = rest.getInt("restaurantId");
				String itemName = rest.getString("itemname");
				String description = rest.getString("description");
				double itemPrice = rest.getDouble("itemprice");
				String imagePath = rest.getString("imagepath");
				boolean isAvailable = rest.getBoolean("isAvailable");
				double rating = rest.getDouble("rating");
				
				menu =new Menu(menuId,itemName,itemPrice,description,imagePath,isAvailable,restaurantId,rating);

			}

		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		return menu;
	}

	@Override
	public void updateMenu(Menu menu) {

		try {
			pstmt = connection.prepareStatement(UPDATE);

			pstmt.setString(1, menu.getItemName());
			pstmt.setString(2, menu.getDescription());
			pstmt.setDouble(3, menu.getItemPrice());
			pstmt.setString(4, menu.getImagePath());
			pstmt.setBoolean(5, menu.isAvailable());
			pstmt.setDouble(6, menu.getRating());
			pstmt.setInt(7, menu.getRestaurantId());
			pstmt.setInt(8, menu.getMenuId());

			System.out.println(pstmt.executeUpdate());

		} catch (Exception e) {

			e.printStackTrace();
		}

	}

	@Override
	public void deleteMenu(int menuId) {

		try {
                 pstmt= connection.prepareStatement(DELETE);

			pstmt.setInt(1, menuId);

			System.out.println(pstmt.executeUpdate());

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	@Override
	public ArrayList<Menu> getAllMenuByRestarent(int restaurantId) {

		Menu menu = null;

		ArrayList<Menu> list = new ArrayList();

		try {
			pstmt = connection.prepareStatement(SELECT_REST_ID);
			pstmt.setInt(1, restaurantId);

			rest = statement.executeQuery();

			while (rest.next()) {

				int menuId = rest.getInt("menuId");
				// int restaurantId=res.getInt("restaurantId");

				String itemName = rest.getString("itemname");
				String dedescription = rest.getString("description");
				double itemPrice = rest.getDouble("itemprice");
				String imagePath = rest.getString("imagepath");
				boolean isAvailable = rest.getBoolean("isAvailable");
				double rating = rest.getDouble("rating");
                  
				
				menu = new Menu(menuId, itemName, itemPrice, dedescription, imagePath, isAvailable, restaurantId, rating);
				 
	

				list.add(menu);
			}

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		return list;
	}

	@Override
	public List<Menu> getAll() {
		Statement stmt = null;

		ResultSet res = null;

		List<Menu> list = new ArrayList();

		try {

			stmt = connection.createStatement();
			res = stmt.executeQuery(SELECT_ALL);

			while (res.next()) {

				int menuId = res.getInt("menuId");
				String name = res.getString("itemName");
				String dedescription = res.getString("description");
				double itemPrice = res.getDouble("itemPrice");
				String imagePath = res.getString("imagePath");
				boolean isAvailable = res.getBoolean("isAvailable");
				int restaurantId = res.getInt("restaurantId");
				double rating = res.getDouble("rating");

				Menu menu = new Menu(menuId, name, itemPrice, dedescription, imagePath, isAvailable, restaurantId,
						rating);

				list.add(menu);

			}
		} catch (Exception e) {
			e.printStackTrace();
		}

		return list;
	}

}
