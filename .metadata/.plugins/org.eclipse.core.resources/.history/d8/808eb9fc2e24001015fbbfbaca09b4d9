package com.tap.controller;

import com.tap.Dao.OrderDao;
import com.tap.DaoImple.OrderItemImp;
import com.tap.DaoImple.OrdersImp;
import com.tap.modeal.Cart;
import com.tap.modeal.CartItem;
import com.tap.modeal.OrderItem;
import com.tap.modeal.User;
import com.tap.modeal.Orders;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;

import java.io.IOException;
import java.sql.Timestamp;
import java.util.Date;

@WebServlet("/ChecketOutServlet")
public class ChecketOutServlet extends HttpServlet {

    private OrderDao orderDao;
    private OrderItemImp orderItemDao;

    public void init() {
        orderDao = new OrdersImp();
        orderItemDao = new OrderItemImp();
    }

    @Override
    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {

        HttpSession session = req.getSession();
        Cart cart = (Cart) session.getAttribute("cart");
        User user = (User) session.getAttribute("loggedInUser");

        if (cart != null && user != null && !cart.getItems().isEmpty()) {
            
            // Get form parameters
            String paymentMethod = req.getParameter("paymentMethod");
            String fullName = req.getParameter("fullName");
            String mobileNumber = req.getParameter("mobileNumber");
            String fullAddress = req.getParameter("fullAddress");
            String pincode = req.getParameter("pincode");

            // Create new order
            Orders order = new Orders();
            order.setUserId(user.getUserId());
            order.setOrderDate(new Timestamp(new Date().getTime()));
            order.setPaymentMode(paymentMethod);
            order.setStatus("Pending");
//            order.setFullName(fullName);
//            order.setMobileNumber(mobileNumber);
//            order.setFullAddress(fullAddress);
//            order.setPincode(pincode);

            // Calculate total amount
            double totalAmount = 0;
            for (CartItem item : cart.getItems().values()) {
                totalAmount += item.getPrice() * item.getQuantity();
            }
            order.setTotalAmount(totalAmount);

            // Save order
            int orderId = orderDao.addOrder(order);
            order.setOrderId(orderId);

            // Save order items
            for (CartItem item : cart.getItems().values()) {
                OrderItem orderItem = new OrderItem(orderId, item.getItemId(), item.getQuantity(), item.getPrice() * item.getQuantity());
                orderItemDao.addOrderItem(orderItem);
            }

            // Clear cart
            session.removeAttribute("cart");
            session.setAttribute("order", order);

            // Redirect to confirmation page
            resp.sendRedirect("cart.jsp");
            resp.sendRedirect("confirm.jsp");

        } else {
            resp.sendRedirect("cart.jsp"); // Empty cart or no user
//            resp.sendRedirect("confirm.jsp");
        }
    }
}


